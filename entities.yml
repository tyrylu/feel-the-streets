Region:
  inherits: Named
  fields:
    wikipedia: str
    wikidata: str
    old_name: str
    name_de: str
    name_pl: str
    name_nl: str
    region_category: RegionCategory
    region_type: RegionType
    description: str
    type: str
Abandoned:
  inherits: Named
  fields:
    type: AbandonedType
    bicycle: AccessType
Accessible:
  inherits: OSMEntity
  fields:
    type: '!AccessType'
    level: str
    door: AccessType
Address:
  long_display_template: '{% if housename %}{{ housename }}, {% endif %}{{ street }} {{ housenumber }}, {{ postcode }}{% if city %} {{ city }}{% endif %}{% if place %} {{ place }}{% endif %}'
  short_display_template: '{{ street }} {{ housenumber }}, {{ postcode }}{% if city %} {{ city }}{% endif %}{% if place %} {{ place }}{% endif %}'
  fields:
    place: str
    city: str
    city_1: str
    postcode: int
    conscriptionnumber: int
    housenumber: str
    official_housenumber: str
    'housenumber:en': str
    'housenumber:ru': str
    streetnumber: str
    street: str
    provisionalnumber: int
    suburb: str
    housename: str
    'housename:de': str
    'housename:ru': str
    country: str
    province: str
    state: str
    unit: str
    floor: str
    flats: int
    district: str
    red: str
    parentstreet: str
Addressable:
  inherits: Named
  long_display_template: '{{ parent_display }}{% if address is defined %}, {{ address }}{% endif %}'
  fields:
    ruian_addr_ref: int
    address: Address
    note: str
    is_in: str
    fixme: str
    website: str
    ele: float
    club: ClubType
    description: str
    level: int
    email: str
    wikidata: str
    alt_name: str
    loc_name: str
    comment: str
    opening_hours: str
    disused_name: str
    internet_access: InternetAccess
Advertising:
  inherits: Named
  fields:
    type: '!AdvertisingType'
    height: int
    lit: bool
    direction: int
AerialWay:
  inherits: Named
  fields:
    type: '!AerialWayType'
    capacity: int
    occupancy: int
    duration: int
    wikipedia: str
    building: str
    length: int
    width: int
    heading: str
    surface: str
    aerodrome_type: AerodromeType
    icao: str
    roof_shape: RoofShape
    heating: bool
    pedestrian: bool
    highway: RoadType
    bridge_structure: BridgeStructure
    bridge: bool
    wikidata: str
    operator: str
    is_in: str
    maxweight: float
    description: str
    area: bool
    ele: float
    start_date: str
    height: float
    layer: int
    note: str
    access: AccessType
    lit: bool
    navigationaid: str
    man_made: ManMadeType
    frequency: str
    disused_aeroway: AerialWayType
    subtype: Subtype
    note_cs: str
    oneway: bool
    proposed: AerialWayType
    beacon_type: BeaconType
    runway: RunwayType
    barrier: BarrierType
    email: str
    phone: str
    military: MilitaryRelationship
    loc_name: str
    min_height: int
    emergency: bool
    building_levels: int
    airmark: AirMarkType
    iata: str
Amenity:
  inherits: Addressable
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    'payment:coins': bool
    'payment:mastercard': bool
    'payment:maestro': bool
    'payment:visaelectron': bool
    'payment:visadebit': bool
    payment:visa: bool
    ref: str
    source: str
    type: AmenityType
    religion: str
    operator: str
    cuisine: str
    phone: str
    official_name: str
    community_centre_for: str
    takeaway: str
    vending: str
    outdoor_seating: bool
    access: AccessType
    smoking: SmokingType
    amenity_1: AmenityType
    drive_through: bool
    backrest: bool
    material: str
    place_type: PlaceType
    seats: int
    unisex: bool
    covered: CoverType
    wheelchair: WheelchairAccess
    facebook: str
    shelter: bool
    hide: bool
    url: str
    denomination: str
    vegetarian_diet: bool
    historic: HistoricType
    dispensing: bool
    barrier: BarrierType
    capacity: int
    emergency: bool
    old_name: str
    brewery: str
    delivery: bool
    postal_code: int
    open_air: bool
    short_name: str
    wikipedia: str
    landuse: LandType
    leisure: LeisureType
    start_date: str
    sport: SportType
    wifi: WifiType
    bottle: bool
    fee: bool
    lockable: bool
    colour: str
    height: int
    lit: bool
    parking: ParkingType
    surface: Surface
    todo: str
    drinking_water: bool
    cargo: str
    charge: str
    int_name: str
    internet_access_fee: bool
    internet_access_ssid: str
    designation: str
    location: Location
    valves: ValvesType
    supervised: bool
    car: bool
    car_capacity: int
    direction: int
    nfc_authentication: bool
    layer: int
    dog: bool
    female: bool
    male: bool
    voltage: int
    toilets_disposal: ToiletsDisposal
    country: str
    schuko_socket: int
    schuko_socket_voltage: str
    type2_socket_voltage: str
    waste: str
    fast_food: FastFoodType
    man_made: ManMadeType
    wheelchair_toilets: bool
    fax: str
    diplomatic: DiplomacyRelation
    automated: bool
    toilets: bool
    vegan_diet: DietType
    indoor_seating: bool
    short_name_en: str
    fence_type: FenceType
    beer: str
    atm: bool
    chademo_socket: int
    community: str
    gambling: bool
    disused: bool
    foot: bool
    genre: Genre
    beer_garden: bool
    chademo_socket_power: str
    studio: StudioType
    wine: bool
    sorting_name: str
    room: AmenityType
    type2_socket: int
    schuko_socket_current: str
Annotated:
  inherits: Named
  fields:
    note: str
    fixme: str
    website: str
    level: int
    removed_name: str
    building_part: bool
    access: AccessType
    complete: bool
    route_master: RouteType
    lock: bool
    historic_building: BuildingType
    proposed: ConstructionType
    building_colour: str
    roof_shape: RoofShape
    disused_railway: RailWayType
    phone: str
    removed_phone: str
Area:
  inherits: Named
  fields:
    type: '!AreaType'
    amenity: AmenityType
    layer: int
    surface: str
    bicycle: bool
    foot: bool
    lit: bool
    address: Address
    tourism: TourismType
    aeroway: AerialWayType
    railway: RailWayType
    man_made: ManMadeType
    floating: bool
    access: AccessType
    old_name: str
    wikidata: str
    wikipedia: str
    leisure: LeisureType
    sport: SportType
    note: str
    alt_name: str
    website: str
    barrier: BarrierType
    animal: str
    attraction: AttractionType
    sorting_name: str
    landuse: LandType
    historic: HistoricType
    url: str
    email: str
AssociatedStreet:
  inherits: Named
  fields: {}
ATM:
  inherits: Addressable
  fields:
    operator: str
    contact_website: str
    fee: str
    drive_through: bool
    phone: str
    wheelchair: WheelchairAccess
    brand: str
    layer: int
    location: Location
    cash_in: bool
    bitcoin: bool
    access: AccessType
Bank:
  inherits: Addressable
  fields:
    brand: str
    operator: str
    atm: bool
    wheelchair: bool
    drive_through: bool
    phone: str
    flats: int
    levels: int
    building_type: BuildingType
    start_date: str
    layer: int
    old_name: str
    wikipedia: str
    contactless_payment: bool
    office: OfficeType
Barrier:
  inherits: Named
  long_display_template: '{{ parent_display }} ({{ type }})'
  fields:
    tactile_paving: bool
    source: str
    type: '!BarrierType'
    foot: AccessType
    bicycle: AccessType
    vehicle: AccessType
    horse: bool
    access: AccessType
    entrance: str
    motor_vehicle: str
    note: str
    maxwidth: int
    fence_type: str
    height: meters
    material: str
    motorcar: AccessType
    motorcycle: bool
    toll: bool
    operator: str
    toll_hgv: bool
    opening_hours: str
    bollard: BollardType
    destination: bool
    noexit: bool
    ticks: int
    man_made: ManMadeType
    description: str
    fixme: str
    two_sided: bool
    historic: bool
    complete: bool
    layer: int
    wall: WallType
    stile: StileType
    traffic_calming: TrafficCalmingType
    level: int
    wheelchair: bool
    liftgate_type: LiftgateType
    maxheight: float
    wikidata: str
    fee: str
    alt_name: str
    kerb: KerbType
    disused: bool
    width: float
    leaf_type: LeafType
    colour: str
    building_colour: str
    wikipedia: str
    hgv: bool
    website: str
    count: int
    network: str
    state: BarrierType
    sorting_name: str
    abandoned_highway: RoadType
    bridge_structure: BridgeStructure
    stroller: bool
    pedestrians: AccessType
    mofa: bool
    ford: bool
    disused_railway: RailWayType
    service: Service
    goods: bool
    comment: str
    agricultural: bool
    swing_gate_type: SwingGateType
Bench:
  inherits: OSMEntity
  fields:
    backrest: bool
BicycleParking:
  inherits: Amenity
  fields:
    amenity: AmenityType
    parking_type: BicycleParkingType
    surveillance: SurveillanceType
    surveillance_type: SurveillanceKind
    surveillance_zone: SurveillanceZone
    food: bool
    real_ale: bool
    service_chain_tool: bool
Board:
  inherits: Tourism
  fields:
    information: InfoType
    board_type: BoardType
    board_number: int
    board_ref: int
    education: bool
    language_cs: bool
Border:
  inherits: Boundary
  fields:
    border_type: BorderType
    is_in: str
    left_country: str
    right_country: str
    uploaded_by: str
    waterway: WaterWayType
    boat: bool
    layer: int
Boundary:
  inherits: Named
  fields:
    source: str
    type: BoundaryType
    name_cs: str
    admin_level: int
    historic_type: HistoricType
    marker_type: MarkerType
    wikipedia: str
    note: str
    start_date: str
    wikidata: str
    population: int
    iso3166_2: str
    end_date: str
    website: str
    barrier: BarrierType
    protect_class: int
    fixname: str
    alt_name_de: str
    old_name_de: str
    old_name: str
    description: str
    year: str
    odl_name_de: str
    track_type: TrackType
    surface: Surface
    bicycle: bool
    width: int
    inscription: int
    old_name_cs: str
    natural: NaturalType
    vehicle_conitional: str
    trail_visibility: TrailVisibility
    ele: int
    man_made: ManMadeType
    tourism: TourismType
    designation: str
    highway: RoadType
    ref: str
Bridge:
  inherits: Named
  fields:
    wikidata: str
    sorting_name: str
Building:
  inherits: Addressable
  fields:
    source: str
    levels: int
    flats: int
    amenity: AmenityType
    religion: str
    official_name: str
    capacity: int
    start_date: str
    denomination: str
    layer: int
    takeaway: TakeAway
    smoking: SmokingType
    delivery: bool
    emergency: EmergencyType
    leisure_type: LeisureType
    tourism_type: TourismType
    man_made: ManMadeType
    operator: str
    industrial_type: IndustrialType
    roof_height: float
    roof_shape: RoofShape
    height: meters
    internet_access_fee: bool
    sport: SportType
    covered: bool
    wikipedia: str
    old_name: str
    short_name: str
    information_type: InfoType
    location: Location
    product: str
    dispensing: bool
    colour: str
    community_centre_for: str
    historic_type: HistoricType
    cuisine: str
    phone: str
    outdoor_seating: bool
    brewery: str
    vegetarian_diet: DietType
    heritage: int
    heritage_operator: str
    access: AccessType
    architect: str
    designation: str
    abandoned: bool
    wheelchair: WheelchairAccess
    landuse: LandType
    roof_levels: int
    roof_material: RoofMaterial
    part: BuildingPartType
    service_times: str
    image: str
    disused: bool
    barrier: BarrierType
    underground_levels: int
    roof_angle: int
    roof_orientation: RoofOrientation
    min_level: int
    cladding: Cladding
    material: Material
    brand: str
    stars: int
    fee: bool
    date: str
    int_name: str
    fax: str
    use: BuildingUsage
    roof_colour: str
    wheelchair_description: str
    construction: ConstructionType
    self_service: bool
    microbrewery: bool
    ruins: bool
    wheelchair_toilets: AccessType
    wifi: WifiType
    opening_hours_url: str
    reservation: ReservationType
    visa_payment: bool
    visa_debit_payment: bool
    visa_electron_payment: bool
    healthcare_speciality: str
    sorting_name: str
    alt_name_1: str
    alt_name_2: str
    end_date: str
    cvut_id: str
    description_en: str
    internet_access_ssid: str
    min_height: float
    max_level: int
    drive_through: bool
    cash_payment: bool
    facebook: str
    diplomatic: DiplomacyRelation
    note_en: str
    bitcoin_payment: bool
    artist_name: str
    rooms: int
    google_plus: str
    twitter: str
    fence_type: FenceType
    toilets_disposal: ToiletsDisposal
    toilets: bool
    bridge: bool
    maestro_payment: bool
    mastercard_payment: bool
    notes_payment: bool
    male: bool
    female: bool
    beer: str
    surface: Surface
    todo: str
    indoor: IndoorType
    automated: bool
    vegan_diet: DietType
    fast_food: FastFoodType
    credit_cards_payment: bool
    debit_cards_payment: bool
    roof_slope_direction: float
    roof_direction: str
    bridge_support: BridgeSupport
    room: AmenityType
    floating: bool
    memorial: str
    gluten_free_diet: bool
    ethnicity: Ethnicity
    residential: ResidentialType
    fenced: bool
    disused_man_made: ManMadeType
    vertical_part: bool
    mooring: AccessType
    seamark_type: SeaMarkType
    flat: Surface
    raw_diet: bool
    en_wheelchair_description: str
    electronic_purses_payment: bool
    kids_area: bool
    beer_1: str
    country: str
    garden_type: GardenType
    meal_voucher_payment: str
    artwork_type: ArtWorkType
    architecture: Architecture
    currency_czk: bool
    real_ale: bool
    camp_site: CampSiteRelation
    advertising: AdvertisingType
    american_express_payment: bool
    cryptocurrencies_payment: bool
    entrance: bool
    name_1: str
    reg_name: str
    secondary_use: str
    building_1: BuildingType
    inscription: str
    surveillance: SurveillanceType
    roof_access: AccessType
    hei: str
    owner: str
    meal_vouchers_payment: bool
    amenity_1: AmenityType
    education: EducationType
    ruian_type: RUIANType
    ruian_building_ref: str
    type: BuildingType
BuildingPart:
  inherits: OSMEntity
  fields:
    type: BuildingPartType
    roof_shape: RoofShape
    roof_orientation: RoofOrientation
    levels: int
    height: int
    roof_direction: int
    roof_height: int
    roof_material: RoofMaterial
    roof_colour: str
    roof_slope_direction: float
    building_material: Material
    level: str
    material: Material
    fixme: str
Bunker:
  inherits: Named
  fields:
    website: str
    type: BunkerType
    historic: bool
    height: int
    tower_type: TowerType
Cafe:
  inherits: Amenity
  fields:
    cafe_type: CafeType
Castle:
  inherits: Building
  fields:
    type: str
    alt_name_3: str
Checkpoint:
  inherits: Named
  fields:
    type: '!CheckpointType'
    checkpoint_type: CheckpointKind
    note: str
    checkpoint_name: str
Clock:
  inherits: Amenity
  fields:
    display: DisplayType
    support: SupportType
    faces: int
    visibility: ClockVisibility
    barometer: bool
    date: bool
    hygrometer: bool
    thermometer: bool
    tourism: TourismType
    inscription: str
    artist_name: str
    entrance: EntranceType
Collection:
  inherits: Named
  fields:
    type: CollectionType
    note: str
    website: str
    wikidata: str
    description: str
    official_name: str
    wikipedia: str
    complete: bool
    fixme: str
Commented:
  inherits: OSMEntity
  fields:
    comment: str
Construction:
  inherits: Named
  fields:
    type: '!ConstructionType'
    official_name: str
    wikidata: str
    wikipedia: str
    bridge: bool
    layer: int
    abandoned_highway: RoadType
    abandoned_ref: str
    official_en_name: str
    note: str
    official_name_1: str
Craft:
  inherits: Named
  fields:
    type: '!CraftType'
    address: Address
    operator: str
    building: BuildingType
    outdoor_seating: bool
    opening_hours: str
    microbrewery: bool
    website: str
    landuse: LandType
    email: str
    phone: str
    level: int
    wheelchair: WheelchairAccess
    note: str
    internet_access: bool
    wikidata: str
    facebook: str
    fax: str
    layer: int
    databox: str
    start_date: int
    bitcoin_payment: bool
Crossing:
  inherits: Named
  fields:
    crossing_ref: str
    'crossing:island': bool
    source: str
    type: '!CrossingType'
    button_operated: bool
    bicycle: BicycleType
    traffic_calming: TrafficCalmingType
    railway: RailWayType
    maxheight: float
    foot: bool
    horse: bool
    kerb: KerbType
    segregated: bool
    traffic_signals: TrafficSignalsType
    tactile_paving: bool
    note: str
    lit: bool
    sloped_curb: CurbType
    wheelchair: bool
    maxspeed: int
    traffic_signals_direction: TrafficSignalsDirection
    traffic_signals_sound: bool
    supervised: bool
    smoothness: str
    surface: str
    fixme: str
    inscription: str
    cycleway: CicleWayKind
    sound: bool
    direction: TrafficSignalsDirection
    level: int
    traffic_sign: RoadType
    barrier: BarrierType
    both_parking_lane: ParkingLaneType
    short_name: str
    highway_2: RoadType
DemolishedBuilding:
  inherits: OSMEntity
  fields:
    fixme: str
Disused:
  inherits: Named
  fields:
    type: '!DisusedType'
    denomination: str
    destroyed_amenity: AmenityType
    destroyed_name: str
    end_date: str
    start_date: str
    wikipedia: str
    religion: str
    highway: RoadType
    operator: str
    foot: bool
    layer: int
    wikidata: str
    note: str
Elevated:
  inherits: OSMEntity
  fields:
    ele: float
    mountain_pass: bool
Enforcement:
  inherits: Named
  fields:
    enforcement: TrafficSignType
    maxspeed: int
Entrance:
  inherits: Named
  fields:
    type: '!EntranceType'
    level: int
    bicycle: bool
    foot: bool
    wheelchair: WheelchairAccess
    horse: bool
    motorcar: bool
    motorcycle: bool
    access: AccessType
    door: DoorType
    note: str
    description: str
    military: MilitaryType
    fixme: str
Fee:
  inherits: OSMEntity
  fields:
    fee: bool
FireHydrant:
  inherits: OSMEntity
  fields:
    type: '!FireHydrantType'
    position: FireHydrantPosition
    count: int
Fountain:
  inherits: Named
  fields:
    drinking_water: bool
    historic: HistoricType
    old_name: str
    loc_name: str
    note: str
    architect: str
    lit: bool
    landuse: LandType
    wikipedia: str
    barrier: BarrierType
    layer: int
    artist_name: str
    alt_name: str
    sorting_name: str
    wikidata: str
    natural: NaturalType
    material: Material
    website: str
    start_date: str
    artwork_type: ArtWorkType
    width: float
    disused: bool
    fixme: str
    tourism: TourismType
Fuel:
  inherits: Named
  fields:
    operator: str
    brand: str
    opening_hours: str
    internet_access: str
    internet_access_paid: str
    shop: ShopType
    phone: str
    address: Address
    building_type: BuildingType
    levels: int
    note: str
    start_date: str
    website: str
    wheelchair: WheelchairAccess
    email: str
    roof_shape: RoofShape
    roof_colour: str
    access: AccessType
Garden:
  inherits: Leisure
  fields:
    garden_type: GardenType
    landuse: LandType
    bicycle: bool
    smoking: bool
    official_name: str
GolfCourse:
  inherits: Leisure
  fields:
    golf_course_type: GolfCourseType
    par: str
Graveyard:
  inherits: Named
  fields:
    religion: str
    wikidata: str
    wikipedia: str
    barrier: BarrierType
    denomination: Denomination
    opening_hours: str
HealthCare:
  inherits: Building
  fields:
    type: '!HealthCareType'
    speciality: HealthCareSpeciality
Historic:
  inherits: Named
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    type: '!HistoricType'
    ele: float
    inscription: str
    religion: str
    wikipedia: str
    denomination: str
    website: str
    start_date: str
    ruins: bool
    wikidata: str
    heritage: int
    heritage_operator: str
    wikimedia_commons: str
    image: str
    description: str
    memorial_type: MemorialType
    memorial_name: str
    note: str
    artist_name: str
    wheelchair: bool
    direction: Direction
    tomb: TombType
    end_date: int
    site_type: SiteType
    material: Material
    date: str
    height: int
    monument: Role
    addr: str
    person_date_of_birth: str
    artwork_type: ArtWorkType
Land:
  inherits: Named
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    type: '!LandType'
    shop_type: ShopType
    website: str
    meadow_type: MeadowType
    man_made: ManMadeType
    crop: str
    barrier: BarrierType
    note: str
    comment: str
    natural_type: NaturalType
    military_type: MilitaryType
    operator: str
    resource: str
    leisure: LeisureType
    address: Address
    leaf_cycle: str
    religion: str
    wikidata: str
    wikipedia: str
    landcover: LandCover
    description: str
    opening_hours: str
    disused: bool
    abandoned: bool
    layer: int
    construction: ConstructionType
    old_name: str
    industrial: IndustrialType
    basin: BasinType
    alt_name: str
    fence_type: FenceType
    fixme: str
    loc_name: str
    residential: ResidentialType
    surface: Surface
    plant: PlantType
    uhul_slt: str
    is_in: str
    access: AccessType
    leaf_type: str
    start_date: str
    uhul_area: str
    uhul_id: str
    wood: str
    landuse_1: LandType
    ele: float
    id_fb: int
    fenced: bool
    depot: DepotType
    sorting_name: str
    height: float
    trees: Trees
    reservoir_type: str
    genus: str
    bridge_structure: BridgeStructure
    level: int
    finely_mown: bool
    golf: str
    mown: bool
    email: str
    phone: str
    colour: str
    barrier_height: float
    denomination: Denomination
    clc_code: int
    site_type: SiteType
Leisure:
  inherits: Addressable
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    source: str
    type: '!LeisureType'
    sport: SportType
    surface: str
    access: AccessType
    designation: str
    openfire: bool
    backrest: bool
    dogs_allowed: bool
    layer: int
    wikipedia: str
    phone: str
    operator: str
    hoops: int
    high_jump: bool
    pole_vault: bool
    long_jump: bool
    shot_put: bool
    covered: bool
    old_name: str
    barrier: BarrierType
    fence_type: FenceType
    wheelchair: bool
    entrance: bool
    baby: bool
    sorting_name: str
    fee: bool
    fenced: bool
    height: meters
    lit: bool
    facebook: str
    small_boats: bool
    google_plus: str
    indoor: IndoorType
    alt_name_1: str
    start_date: str
    alt_name_2: str
    short_name: str
Level:
  inherits: Named
  fields:
    level: int
    indoor: IndoorType
ManMade:
  inherits: Named
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    source: str
    type: '!ManMadeType'
    classification: str
    image: str
    historic: bool
    network: str
    layer: int
    location: str
    substance: str
    height: meters
    handrail: bool
    email: str
    website: str
    telephone: str
    operator: str
    surveillance: SurveillanceType
    disused: bool
    start_date: str
    fixme: str
    material: Material
    bridge: bool
    pipeline: PipelineType
    tunnel: bool
    wikidata: str
    wikipedia: str
    access: AccessType
    pump: PumpType
    street_cabinet: StreetCabinetType
    count: int
    usage: str
    floating: bool
    note: str
    wifi_ssid: str
    building_material: Material
    sorting_name: str
    loc_name: str
    voltage: int
    note_en: str
    air_quality_monitoring: bool
    description: str
Memorial:
  inherits: Historic
  fields:
    subject_wikidata: str
    subject_wikipedia: str
    artist_wikidata: str
    source: str
    historic: HistoricType
    memorial_kind: MemorialKind
    url: str
    text: str
    network: str
    person_date_of_death: str
    wikipedia_en: str
    level: int
    inscription_cs: str
    fixme: str
Named:
  inherits: OSMEntity
  long_display_template: '{{ parent_display }}{% if name is defined %} {{ name }}{% endif %}'
  short_display_template: '{{ parent_display }}{% if name is defined %} {{ name }}{% endif %}'
  fields:
    name: str
Natural:
  inherits: Named
  fields:
    source: str
    type: '!NaturalType'
    lining: str
    man_made: ManMadeType
    depth: float
    ele: float
    note: str
    drinking_water: bool
    alt_name: str
    website: str
    wikipedia: str
    inscription: str
    tourism_type: TourismType
    opening_hours: str
    surface: str
    material: str
    wikidata: str
    landuse: LandType
    barrier: BarrierType
    fence_type: FenceType
    leaf_type: str
    golf: GolfRelation
    natural_1: NaturalType
    description: str
    layer: int
    uhul_area: str
    height: float
    uhul_slt: str
    garden_type: GardenType
    fixme: str
    sport: SportType
    landcover: str
    historic: HistoricType
    is_in: str
    wetland: WetLandType
    leaf_cycle: LeafCycle
    url: str
    import_ref: str
    wood: LeafCycle
Notice:
  inherits: Annotated
  fields:
    category: NoticeCategory
    function: NoticeFunction
    impact: NoticeImpact
    orientation: int
    type: NoticeType
NoExit:
  inherits: OSMEntity
  fields:
    noexit: bool
    fixme: str
    note: str
    todo: str
    operator: str
Office:
  inherits: Addressable
  fields:
    type: '!OfficeType'
    phone: str
    smoking: SmokingType
    official_name: str
    levels: int
    government: GovernmentRelation
    landuse: LandType
    short_name: str
    wikipedia: str
    barrier: BarrierType
    denomination: str
    religion: str
    wheelchair: WheelchairAccess
    operator: str
    brand: str
    bitcoin_payment: bool
    authority: AuthorityType
    old_name: str
    roof_material: RoofMaterial
    roof_shape: RoofShape
    roof_height: int
    roof_colour: str
    flats: int
    function: Function
    indoor: IndoorType
    amenity: AmenityType
    fax: str
    lawyer: LawyerType
    phone_1: str
    facebook: str
    start_date: str
    designation: str
    description_en: str
OSMEntity:
  long_display_template: '{{ class_name_display }}'
  short_display_template: '{{ class_name_display }}'
  fields:
    timestamp: '!str'
    version: '!int'
    changeset: '!int'
    user: '!str'
    uid: '!int'
    

Parking:
  fields:
    source: str
    amenity: AmenityType
    paid: str
    capacity: int
    capacity_for_disabled: str
    operator: str
    access: AccessType
    type: ParkingType
    supervised: bool
    designation: str
    building_type: BuildingType
    surface: str
    address: Address
    park_ride: bool
    layer: int
    website: str
    building_levels: int
    opening_hours: str
    start_date: str
    wheelchair: WheelchairAccess
    barrier: BarrierType
    capacity_for_parents: bool
    capacity_for_women: bool
    lit: bool
    description: str
    fixme: str
    covered: bool
    construction: ConstructionType
    landuse: LandType
    maxstay: str
    maxheight: float
    smoothness: Smoothness
    fenced: bool
    level: str
    email: str
    bus: bool
    garden_type: GardenType
    foot: bool
    height: str
    demolished_building: BuildingType
    bicycle: bool
    motorcycle: bool
    old_name: str
  inherits: Named
Piste:
  inherits: OSMEntity
  fields:
    type: str
    difficulty: str
Place:
  inherits: Named
  fields:
    name_ru: str
    name_mk: str
    type: '!PlaceType'
    population: int
    wikipedia: str
    is_in: str
    wikidata: str
    ele: int
    loc_name: str
    old_name: str
    postal_code: str
    alt_name: str
    alt_name_de: str
    website: str
    email: str
    phone: str
    note: str
    sorting_name: str
    short_name: str
    attraction: AttractionType
    leisure: LeisureType
    landuse: LandType
    start_date: int
    int_name: str
    wikipedia_cs: str
    alt_name_cs: str
Platform:
  inherits: Named
  fields:
    source: str
    public_transport: TransportRelationship
    highway: RoadType
    ztm_ref: str
    bus_routes: str
    train: bool
    bus: bool
    tram: bool
    railway: TransportRelationship
    shelter: bool
    bench: bool
    network: str
    operator: str
    surface: str
    lit: bool
    wheelchair: WheelchairAccess
    covered: bool
    building: BuildingType
    bin: bool
    official_name: str
    area: bool
    foot: AccessType
    layer: int
    trolleybus: bool
    tunnel: bool
    route_ref: str
    bridge: bool
    tactile_paving: bool
    short_name: str
    alt_name: str
    fixme: str
    note: str
    description: str
    level: int
    bicycle: BicycleType
    subway: bool
    width: int
    local_ref: str
    indoor_level: str
Playground:
  inherits: Leisure
  fields:
    playground_type: PlaygroundType
    material: Material
Pole:
  inherits: Named
  fields:
    transformer_type: TransformerType
    voltage: str
    operator: str
    note: str
    fixme: str
    hiking: bool
    tourism: TourismType
    pole: PowerType
    disused: bool
    ele: int
    information: InfoType
PostBox:
  inherits: Named
  fields:
    collection_times: str
    operator: str
    drive_through: bool
    level: int
    note: str
Power:
  inherits: OSMEntity
  fields:
    source: str
    type: '!PowerType'
    building: BuildingType
    layer: int
    fixme: str
    location: Location
    high_voltage: int
    voltage: int
    low_voltage: int
    material: Material
    transition_location: bool
    tower: PowerType
    frequency: int
    area: bool
    operator: str
    start_date: str
    ref: str
    design: PowerDesign
PowerGenerator:
  inherits: Named
  fields:
    source: GeneratorSource
    type: GeneratorType
    electricity_output: str
    method: str
    building: BuildingType
    hot_water_output: str
    frequency: int
    operator: str
    start_date: str
    steam_output: str
    layer: int
    barrier: BarrierType
    note: str
PowerLine:
  inherits: Named
  fields:
    start_date: str
    power: PowerType
    type: PowerLineType
    cables: int
    voltage: int
    wires: WireType
    frequency: int
    operator: str
    note: str
    route: RouteType
    layer: int
    location: Location
    circuits: int
    line_colour: str
    colour: str
    description: str
    complete: bool
    fixme: str
PowerPlant:
  inherits: Building
  fields:
    electricity_output: str
    frequency: int
    plant_source: GeneratorSource
PowerSubstation:
  inherits: Named
  fields:
    power: PowerType
    type: PowerSubstationType
    location: str
    voltage: str
    frequency: int
    barrier: BarrierType
    building: BuildingType
    operator: str
    building_levels: int
    roof_shape: RoofShape
    building_colour: str
    height: int
    locate: Locate
    roof_colour: str
    fixme: str
    start_date: str
    note: str
    rating: str
    roof_levels: int
    gas_insulated: bool
    fence_type: FenceType
    access: bool
    low_voltage: int
    wikidata: str
    description: str
ProtectedArea:
  inherits: Named
  fields:
    source: str
    boundary: BoundaryType
    name_de: str
    iucn_level: str
    protect_class: int
    type: ProtectedAreaType
    website: str
    start_date: str
    protection_title: str
    wikipedia: str
    wikidata: str
    alt_name: str
    landuse: LandType
    fireplace: bool
    description_cz: str
Pub:
  inherits: Addressable
  fields:
    amenity: AmenityType
    phone: str
    smoking: SmokingType
    facebook: str
    brewery: str
    flats: int
    levels: int
    outdoor_seating: bool
    start_date: str
    wheelchair: WheelchairAccess
    cuisine: str
    wifi: WifiType
    sport: SportType
    designation: str
    takeaway: bool
    internet_access_fee: bool
    food: bool
    url: str
    operator: str
    other_payment: bool
    cash_payment: bool
    debitcards_payment: bool
    shop: ShopType
    phone_1: str
    opening_date: str
    leisure: LeisureType
    litecoin_payment: bool
    ethereum_payment: bool
    meal_vouchers_payment: bool
    gambling: bool
    jcb_payment: bool
    visa_payment: bool
    cryptocurrencies_payment: bool
    beer_garden: bool
PublicTransport:
  inherits: Named
  fields:
    network: str
    pub: SiteType
RailWay:
  inherits: Named
  fields:
    maxspeed_source: str
    ref: str
    source: str
    atb-ng: bool
    date_source: str
    ProRailSpoortak_ref: str
    loading_gauge: LoadingGauge
    ProRailID_ref: float
    atb: bool
    atb-eg: bool
    cutting_name: str
    note_nl: str
    type: '!RailWayType'
    gauge: str
    usage: RailWayUsage
    electrified: str
    tracks: int
    maxspeed: int
    passenger_lines: int
    service: str
    layer: int
    is_bridge: BridgeType
    tunnel: TunnelType
    fixme: str
    ele: int
    crossing_light: bool
    crossing_bell: bool
    crossing_barrier: CrossingBarrier
    crossing_type: CrossingType
    supervised: bool
    surface: str
    building_type: BuildingType
    flats: int
    levels: int
    oneway: bool
    tram_oneway: bool
    address: Address
    cutting: bool
    frequency: float
    voltage: int
    traffic_mode: str
    preferred_direction: str
    wheelchair: WheelchairAccess
    location: Location
    operator: str
    bicycle: bool
    horse: bool
    hazard: HazardType
    alt_name: str
    old_name: str
    wikidata: str
    wikipedia: str
    image: str
    network: str
    etcs: str
    radio: str
    track_class: TrackClass
    tilting_maxspeed: int
    structure_gauge: StructureGauge
    bidirectional: Bidirectionality
    ls: bool
    track_ref: str
    note: str
    start_date: str
    covered: bool
    description: str
    embankment: bool
    proposed: RailWayType
    access: AccessType
    maxheight: float
    disused: RailWayType
    abandoned_railway: RailWayType
    end_date: str
    bridge_name: str
    comment: str
    colour: Colour
    station: RailWayType
    transport: RailWayType
    level: int
    construction: RailWayType
    foot: bool
    train: bool
    switch: SwitchType
    bridge_structure: BridgeStructure
    disused_railway: RailWayType
    loc_name: str
    shelter: bool
    check_date: str
    pzb: bool
    tunnel_name: str
    height: float
    length: float
    indoor_level: str
    highspeed: bool
    gnt: bool
    lzb: bool
    tilting: bool
    traces: int
    forward_maxspeed: int
    backward_maxspeed: int
    main_switch_off: bool
    exact_position: float
    local_operated: bool
    signal_direction: SignalDirection
    signal_position: SignalPosition
    shunting_signal: str
    shunting_signal_form: SignalForm
    shunting_signal_height: SignalHeight
    shunting_signal_states: str
    main_repeated_signal: str
    main_repeated_signal_form: SignalForm
    main_repeated_signal_states: str
    distant_signal: str
    distant_signal_form: SignalForm
    distant_signal_height: SignalHeight
    distant_signal_states: str
    main_signal: str
    main_signal_form: SignalForm
    main_signal_function: SignalFunction
    main_signal_height: SignalHeight
    main_signal_states: str
    main_signal_substitute_signal: str
    distant_speed_limit_signal: str
    distant_speed_limit_signal_form: SignalForm
    distant_speed_limit_signal_height: SignalHeight
    distant_speed_limit_signal_speed: int
    electricity_signal: str
    electricity_signal_form: SignalForm
    electricity_signal_height: SignalHeight
    electricity_signal_type: ElectricitySignal
    speed_limit_signal: str
    speed_limit_signal_form: SignalForm
    speed_limit_signal_height: SignalHeight
    speed_limit_signal_speed: str
    crossing_activation: CrossingActivation
    crossing_saltire: bool
    position: float
    distant_signal_deactivated: bool
    main_signal_deactivated: bool
    shunting_signal_deactivated: bool
    main_repeated_signal_deactivated: bool
    distant_station_signal: str
    distant_station_signal_form: SignalForm
    snowplow_signal: str
    snowplow_signal_form: SignalForm
    snowplow_signal_type: SignalType
    diverging_maxspeed: int
    straight_maxspeed: int
    distant_crossing_signal: str
    distant_crossing_signal_form: SignalForm
    main_repeated_signal_substitute_signal: str
    distant_crossing_signal_deactivated: bool
    turnout_side: TurnoutSide
    distant_crossing_signal_caption: str
    snowplow_signal_deactivated: bool
    minor_signal: str
    minor_signal_form: SignalForm
    minor_signal_deactivated: bool
    minor_signal_height: SignalHeight
    minor_signal_states: str
    electric_switch: bool
    minor_signal_substitute_signal: str
    speed_limit_signal_deactivated: bool
    electricity_signal_deactivated: bool
    distant_station_signal_deactivated: bool
    left_avalanche_protector: AvalancheProtectorType
    reg_name: str
    area: bool
    catenary_mast_milestone: bool
    emergency_brake_override_milestone: bool
    hot_box_defect_detector: bool
    network_en: str
    speed_limit_signal_deactivatedd: bool
    tram: bool
    entrance: EntranceType
    abandoned: RailWayType
    switch_configuration: SwitchConfiguration
    crossing_on_demand: bool
    distant_signal_repeated: bool
    workrules: str
    switch_resetting: bool
    wheelchair_toilets: bool
    barrier: BarrierType
    combined_signal: str
    combined_signal_function: SignalFunction
    wrong_road_signal: str
    electricity_signal_turn_direction: str
    oneway_1: bool
    website: str
    historic: bool
    combined_signal_states: str
    route_signal: str
    route_signal_states: str
    todo: str
    is_in: str
    platforms: int
Recycling:
  inherits: Named
  fields:
    amenity: AmenityType
    type: RecyclingType
    phone: str
    website: str
    opening_hours: str
    glass: bool
    glass_bottles: bool
    plastic_bottles: bool
    plastic_packaging: bool
    clothes: bool
    paper: bool
    plastic: bool
    electrical_appliances: bool
    batteries: bool
    cartons: bool
    beverage_cartons: bool
    small_appliances: bool
    cans: bool
    pet: bool
    electrical_items: bool
    furniture: bool
    hazardous_waste: bool
    tyres: bool
    organic: bool
    aluminium: bool
    barrier: BarrierType
    scrap_metal: bool
    fence_type: FenceType
    operator: str
    waste: bool
    cardboard: bool
    magazines: bool
    newspaper: bool
    paper_packaging: bool
    location: Location
    books: bool
    green_waste: bool
    wood: bool
    glass_green: bool
    glass_white: bool
    shoes: bool
    drinking_cartons: bool
    mobile_phones: bool
    plastic_bags: bool
    electronics: bool
    designation: str
    email: str
    underground: bool
Restriction:
  inherits: Named
  fields:
    type: RestrictionType
    except_: str
    note: str
    hgv_restriction: RestrictionType
    conditional: str
RF:
  inherits: Named
  fields:
    ant: Ant
    category: RFCategory
    modulation: str
    power: int
    content: str
    stereo: bool
    pi: str
    dvbt_parameters: str
    owner: str
    callsign: str
Road:
  inherits: Named
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    ruian_street_ref: int
    embedded_rails: EmbeddedRails
    mtb_scale: str
    footway_surface: Surface
    cycleway_surface: Surface
    'source:maxspeed:backward': str
    'source:maxspeed:forward': str
    'name:ru': str
    'turn:lanes:backward': str
    'source:ref': str
    name_nl: str
    name_fr: str
    motorroad: bool
    width_source: str
    ref: str
    'source:lit': str
    'source:highway': str
    construction: ConstructionType
    'turn:lanes': str
    'source:maxspeed': str
    source: str
    name_source: str
    vehicle_conditional: str
    TMC_cid_58_tabcd_1_LCLversion: float
    TMC_cid_58_tabcd_1_LocationCode: int
    TMC_cid_58_tabcd_1_NextLocationCode: int
    TMC_cid_58_tabcd_1_PrevLocationCode: int
    TMC_cid_58_tabcd_1_Class: TMCcid58tabcd1ClassType
    milestone: int
    note_ref: str
    proposed_lanes: str
    bus_toll: bool
    hgv_toll: bool
    maxaxleload_source: str
    conditional_hgv_maxspeed: str
    maxspeed_note: str
    construction_end_date: str
    turn_lanes_forward: str
    type: RoadType
    railway: RailWayType
    int_ref: str
    maxspeed: int
    maxspeed_hgv: int
    maxspeed_forward: int
    maxspeed_backward: int
    hgv: AccessType
    lanes: float
    oneway: str
    tram_oneway: bool
    bicycle_oneway: bool
    junction_type: JunctionType
    bridge: BridgeType
    bridge_structure: BridgeStructure
    layer: int
    sidewalk: SidewalkType
    note: str
    foot: AccessType
    bicycle_allowed: AccessType
    motor_vehicle_allowed: AccessType
    motorcycle_allowed: AccessType
    vehicle_allowed: AccessType
    horse_allowed: AccessType
    maxheight: float
    segregated: bool
    tracktype: str
    maxweight: tons
    access: AccessType
    surface: Surface
    width: meters
    smoothness: str
    cycleway: CycleWayType
    right_cycleway: CycleWayType
    left_cycleway: CycleWayType
    backward_lanes: int
    forward_lanes: int
    tunnel: str
    footway_type: FootwayType
    inline_skates_allowed: AccessType
    exit_to: str
    lit: bool
    alt_name: str
    fixme: str
    toll: bool
    maxlength: int
    opening_date: str
    route: str
    noexit: AccessType
    owed: AccessType
    comment: str
    waterway: WaterWayType
    dogs_allowed: bool
    goods: AccessType
    natural: NaturalType
    service: str
    pedestrian: bool
    wheelchair: WheelchairAccess
    proposed: RoadType
    noname: bool
    gauge: str
    tracks: int
    cutting: Cutting
    incline: Inclination
    handrail: bool
    end_date: str
    maxaxleload: float
    psv: AccessType
    crossing: CrossingType
    sac_scale: str
    trail_visibility: str
    covered: str
    ford: bool
    traffic_calming: TrafficCalmingType
    roller_ski: AccessType
    destination: str
    colour: str
    destination_symbol: DestinationSymbol
    symbol: Symbol
    kct_blue: bool
    name_1: str
    location: Location
    lane_destinations: str
    trolley_wire: bool
    proposed_bridge: bool
    abutters: AbuttersType
    embankment: bool
    railway_lanes_backward: str
    railway_lanes_forward: str
    ticks: float
    change_lanes_backward: str
    change_lanes_forward: str
    psv_lanes_backward: str
    psv_lanes_forward: str
    parking_lane_left: ParkingLaneType
    parking_lane_both: ParkingLaneType
    parking_lane_right: ParkingLaneType
    bus_lanes_backward: str
    bus_lanes_forward: str
    busway: Busway
    vehicle_lanes_backward: str
    vehicle_lanes_forward: str
    railway_lanes: str
    busway_right: BuswayLaneType
    old_name: str
    destination_lanes_colours: str
    forward_destination: str
    start_date: str
    motorcar: AccessType
    wikidata: str
    wikipedia: str
    tube: bool
    description: str
    material: Surface
    change_lanes: str
    traffic_zone: str
    maxwidth: float
    mtb_bicycle_class: int
    backward_destination: str
    snowplowing: bool
    winter_service: bool
    technical_mtb_bicycle_class: int
    narrow: bool
    opening_hours: str
    man_made: ManMadeType
    operator: str
    kerb: KerbType
    tactile_paving: TactilePaving
    complete: bool
    est_width: float
    snowmobile: bool
    level: int
    abandoned: bool
    ref_name: str
    ref_name_note: str
    placement: str
    is_in: str
    agricultural: bool
    carriage: bool
    lanes_maxwidth: float
    priority_road: RoadPriority
    lcn: bool
    overtaking: bool
    bus: AccessType
    pl_highway_class: str
    pl_highway_category: int
    bus_maxspeed: int
    trailer_maxspeed: int
    carriageway_width: float
    wet_maxspeed: int
    bridge_name: str
    variable_maxspeed: SpeedVariable
    sorting_name: str
    historic: HistoricType
    bus_overtaking: bool
    hgv_overtaking: bool
    trailer_overtaking: bool
    minspeed: int
    ncn: bool
    destination_sign: str
    area: bool
    short_name: str
    hgv_6_5t: AccessType
    destination_int_ref_lanes: str
    destination_ref_lanes: str
    destination_symbol_lanes: str
    left_parking_condition: ParkingCondition
    right_parking_condition: ParkingCondition
    parking_lane_both_parallel: ParkingLaneType
    destination_int_ref: str
    destination_ref: str
    maxspeed_type: MaxspeedType
    motor_vehicle_conditional: str
    motor_vehicle_forward_conditional: str
    cutline: CutlineType
    hgv_hour_off: str
    hgv_hour_on: str
    int_name: str
    parking_lane_left_diagonal: ParkingLaneType
    maxspeed_conditional: str
    forward_maxspeed_conditional: str
    crossing_ref: str
    motor_vehicle_backward: AccessType
    vehicle_forward: AccessType
    both_sidewalk_kerb: KerbType
    parking_lane_left_parallel: ParkingLaneType
    leaf_type: str
    vehicle_forward_conditional: str
    transit_lanes: str
    bicycle_forward_lanes: str
    restriction: RestrictionType
    wheelchair_ramp: bool
    hide: bool
    forward_maxheight: float
    technical_bicycle_class: int
    ramp: RampType
    survey_date: str
    abandoned_higway: RoadType
    indoor: IndoorType
    informal: bool
    hgv_6t: AccessType
    advisory_maxspeed: int
    old_ref: str
    bridge_ref: str
    hgv_conditional_maxspeed: str
    lane_marking: bool
    turn: str
    destination_country: str
    dual_carriageway: bool
    access_note: str
    nat_ref: str
    left_footway_width: float
    hazmat_water: bool
    hgv_12t: AccessType
    passing_places: bool
    sport: SportType
    hgv_3_5t: AccessType
    maxweight_note: str
    alt_name_de: str
    alt_name_en: str
    rcn: bool
    rcn_ref: int
    distance: float
    highway_area: AreaType
    tourism: TourismType
    loc_name: str
    place: PlaceType
    hazmat_e: bool
    destination_name: str
    psv_lanes: str
    name_note: str
    taxi_lanes: str
    disused: bool
    vehicle_lanes: str
    both_ways_lanes: int
    maxspeed_source: str
    voltage: int
    both_cycleway: CycleWayType
    vorh_parking_condition: ParkingCondition
    both_default_parking_condition: ParkingCondition
    both_residents_parking_condition: int
    both_parking_condition_time_interval: str
    zone_maxspeed: int
    psv_oneway: bool
    removed_cycleway: CycleWayType
    incline_steep: bool
    bicycle_lanes: str
    hazmat: bool
    amenity: AmenityType
    ski: bool
    tourist_bus: bool
    pedestrians: bool
    hgv_maxweight: int
    priority: RoadPriority
    hgv_lanes: str
    fee: str
    reg_name_note: str
    reg_name: str
    cs_note: str
    height: meters
    repeat_on: str
    stroller: bool
    bdouble: bool
    shoulder: ShoulderType
    both_parking_condition: str
    hazard: Hazard
    divider: Divider
    kct_green: RouteImportance
    bus_lanes: int
    his_1991_name: str
    conditional_overtaking: str
    horse_suitable: bool
    veh_ban_from: str
    emergency: EmergencyType
    hgv_backward_conditional_maxspeed: str
    hgv_backward: AccessType
    electrified: str
    forward_overtaking: bool
    hgv_backward_maxspeed: int
    support: Support
    right_parking_condition_time_interval: str
    parking_lane: ParkingLaneType
    official_name: str
    his_1945_name: str
    both_residents_parking_condition_time_interval: str
    odbl: ODBL
    forward_placement: str
    backward_overtaking: bool
    his_1896_name: str
    both_parking: str
    his_1400_1800_name: str
    his_1870_1940_name: str
    backward_bus: AccessType
    shelter: bool
    indoor_level: str
    backward_change: bool
    junction_ref: int
    capacity: int
    right_parking_condition_maxstay: str
    destination_note: str
    barrier: BarrierType
    right_residents_parking_condition: int
    destination_street: str
    left_arcade: ArcadeType
    conditional_maxwidth: str
    his_1930_name: str
    tmc_cid_58_tabcd_1_class: TMC_CID_58_TABCD_1_Class
    tmc_cid_58_tabcd_1_lclversion: float
    tmc_cid_58_tabcd_1_nextlocationcode: int
    hgv_conditional_overtaking: str
    psv_lanes_times: str
    his_1990_name: str
    check_date: str
    his_1962_name: str
    stroller_ramp: bool
    depth: float
    forward_hazard: str
    both_sidewalk_surface: Surface
    conveying: Conveying
    his_1940_1945_name: str
    right_parking_default_condition: ParkingCondition
    hgv_12: AccessType
    alt_name_cs: str
    abandoned_railway: RailWayType
    his_1840_1870_name: str
    tram: bool
    his_1951_1990_name: str
    length: int
    attraction: bool
    website: str
    sloped_curb: CurbType
    bridge_height: int
    oneway_railway: bool
    building: BuildingType
    proposed_highway: RoadType
    taxi_lanes_forward: str
    destination_colour_tx_lanes: str
    max: int
    surface_1: Surface
    right_bicycle_sidewalk: bool
    left_bicycle_sidewalk: bool
    abandoned_highway: RoadType
    backward_conditional_maxspeed: str
    traffic_sign: TrafficSignType
    description_ref: str
    hgv_tolltype: str
    maxheight_note: str
    steps: bool
Route:
  inherits: Named
  fields:
    source: str
    bdouble: bool
    name_cs: str
    name_de: str
    name_ru: str
    name_pl: str
    name_sk: str
    name_en: str
    name_fr: str
    name_nl: str
    bus: BusType
    network_type: NetworkType
    type: '!RouteType'
    complete: str
    destinations: str
    kct_red: RouteImportance
    network: str
    note: str
    operator: str
    symbol: str
    kct_yellow: RouteImportance
    kct_green: RouteImportance
    kct_blue: RouteImportance
    alt_name: str
    description: str
    from_: str
    kct_none: RouteImportance
    wikidata: str
    wikipedia: str
    to: str
    fixme: str
    distance: str
    state: RouteState
    website: str
    lcn_description: str
    colour: str
    service: RouteService
    via: str
    public_transport_version: int
    wheelchair: WheelchairAccess
    text_colour: str
    note_1: str
    note_2: str
    trail_type: RouteImportance
    public_transport: str
    designation: str
    short_name: str
    section: str
    icn_ref: int
    route_master: RouteType
    bicycle: bool
    foot: bool
    motor_vehicle: bool
    opening_hours: str
    duration: str
    fee: bool
    road_components: int
    ferry: FerryType
    start_date: str
    a: int
    destination: str
    official_name: str
    opening_date: str
    roundtrip: bool
    ref: str
    nat_ref: str
    kct_white: RouteImportance
    note_cz: str
SchoolThing:
  inherits: OSMEntity
  fields:
    type: SchoolRelatedThingType
ServiceRoad:
  inherits: Road
  long_display_template: '{{ class_name_display }}{% if name is defined %} {{ name }}{% endif %}'
  short_display_template: '{{ class_name_display }}{% if name is defined %} {{ name }}{% endif %}'
  fields:
    delivery: bool
    frequency: int
    vehicle_backward: AccessType
    parking: ParkingType
    todo: str
Shelter:
  inherits: Named
  fields:
    type: ShelterType
    building: BuildingType
    tourism: TourismType
    bench: str
    internet_access: InternetAccess
    internet_access_ssid: str
    height: int
    description: str
    architect: str
    fireplace: bool
    bin: bool
Shop:
  inherits: Building
  fields:
    type: ShopType
    vehicle_parts: str
    vehicle_repair: str
    organic: ShopItemAvailability
    coins_payment: bool
    second_hand: ShopItemAvailability
    service: str
    skiing: SkiingType
    wine: bool
    tickets: TicketType
    trade: TradeType
    beauty: BeautyType
    hobby: HobbyType
    jcb_payment: bool
Site:
  inherits: Named
  fields:
    type: SiteType
    website: str
    wikidata: str
    wikipedia: str
    layer: int
SocialFacility:
  inherits: Amenity
  fields:
    facility_type: '!SocialFacilityType'
    expected_users: SocialFacilityUser
    building_type: BuildingType
    flats: int
    levels: int
Sport:
  inherits: Addressable
  fields:
    type: '!SportType'
    swimming: SwimmingType
    leisure: LeisureType
    surface: Surface
    layer: int
    barrier: BarrierType
    seasonal: bool
    wheelchair: WheelchairAccess
    landuse: LandType
    access: AccessType
    lit: bool
    operator: str
    abandoned: bool
    designation: str
    phone: str
    golf: GolfRelation
    fee: bool
    shooting: ShootingType
    sport_1: SportType
    opening_hours_url: str
    reservation: ReservationType
    capacity: int
    fence_type: FenceType
    height: meters
    facebook: str
    climbing_length: int
    official_name: str
    short_name: str
    url: str
    wikipedia: str
    climbing_sport: int
    old_name: str
    disused: bool
    alt_name_1: str
    man_made: ManMadeType
    fenced: bool
    wikimedia_commons: str
    covered: bool
    highjump: bool
Steps:
  inherits: Named
  fields:
    highway: RoadType
    source: str
    direction: StepsDirection
    step_count: int
    surface: str
    width: float
    bicycles_allowed: bool
    lit: bool
    layer: int
    foot: AccessType
    tunnel: str
    access: AccessType
    motor_vehicle: AccessType
    handrail: HandrailType
    vehicle: bool
    bicycle: AccessType
    ramp: bool
    horse: bool
    sac_scale: str
    fixme: str
    note: str
    material: str
    tracktype: str
    location: Location
    wheelchair: bool
    conveying: bool
    level: str
    mtb_scale: str
    mtb_scale_uphill: int
    bridge: bool
    left_handrail: bool
    right_handrail: bool
    center_handrail: bool
    step_condition: StepCondition
    tactile_paving: bool
    trail_visibility: TrailVisibility
    start_date: str
    covered: bool
    escalator: bool
    sidewalk: SidewalkType
    service: Service
    step_height: StepHeight
    step_length: StepLength
    motorcar: bool
    winter_service: bool
    cutting: bool
Stop:
  inherits: Named
  fields:
    bus_routes: str
    public_transport: TransportRelationship
    ztm_ref: int
    ref: str
    type: StopType
    bus: bool
    tram: bool
    train: bool
    old_name: str
    has_shelter: bool
    covered: bool
    bench: bool
    operator: str
    tactile_paving: bool
    opening_hours: str
    network: str
    layer: int
    building: bool
    area: bool
    zone: int
    wheelchair: WheelchairAccess
    note: str
    trolleybus: bool
    alt_name: str
    route_ref: str
    local_ref: str
    fixme: str
    ele: float
    image: str
    wikidata: str
    wikipedia: str
    ref_name: str
    short_name: str
    bin: bool
    official_name: str
    comment: str
    complete: bool
    disused: bool
    uic_name: str
    uic_ref: int
    direction: Direction
    alt_name_de: str
    old_name_de: str
    website: str
    colour: str
    network_en: str
    station: StationType
    subway: bool
    transport: Transport
    network_cs: str
    start_date: str
    description: str
    rail: bool
    level: int
    construction: ConstructionType
    access: bool
    wheelchair_toilets: bool
    lines: str
    destination: str
    check_date: str
    oneway: bool
    shelter_type: ShelterType
Street:
  inherits: Named
  fields:
    site: SiteType
Surveillance:
  inherits: Named
  fields:
    type: SurveillanceType
    kind: SurveillanceKind
    zone: SurveillanceZone
    man_made: ManMadeType
    designation: str
    camera_mount: CameraMount
    fixme: str
    camera_direction: int
    height: int
    authority: Authority
    landuse: LandType
    level: int
    website: str
    surveillance_zone: SurveillanceZone
    amenity: AmenityType
    support: SupportType
    covered: bool
Theatre:
  inherits: Named
  fields:
    address: Address
    is_in: str
    levels: int
    flats: int
Tourism:
  inherits: Addressable
  long_display_template: '{{ parent_display }} ({{ type }})'
  short_display_template: '{{ type }} {% if name %} {{ name }}{% endif %}'
  fields:
    ref: str
    source: str
    subject_wikipedia: str
    subject_wikidata: str
    name_de: str
    name_ru: str
    name_en: str
    type: '!TourismType'
    operator: str
    information_type: InfoType
    hiking: bool
    bicycle: bool
    stars: int
    map_type: str
    map_size: str
    ski: bool
    fireplace: bool
    artist_name: str
    artwork_type: ArtWorkType
    start_date: str
    smoking: SmokingType
    phone: str
    wikipedia: str
    barrier_type: BarrierType
    direction: str
    material: str
    inscription: str
    foot: bool
    zoo: str
    height: int
    man_made: ManMadeType
    historic: HistoricType
    amenity: AmenityType
    building: BuildingType
    natural: NaturalType
    cuisine: str
    building_part: BuildingPartType
    internet_access_fee: bool
    roof_height: int
    roof_shape: RoofShape
    heritage: int
    heritage_operator: str
    fee: bool
    old_name: str
    designation: str
    rooms: int
    image: str
    wheelchair: WheelchairAccess
    access: AccessType
    disused: bool
    layer: int
    architect: str
    leisure: LeisureType
    bitcoin_payment: bool
    noname: bool
    attraction: AttractionType
    religion: str
    caravans: bool
    tents: bool
    en_description: str
    facebook: str
    species: str
    taxon_cs: str
    fax: str
    short_name: str
    ref_1: str
    min_height: int
    location: Location
    denotation: Denotation
    leaf_type: str
    taxon: str
    official_name: str
    colour: str
    lit: bool
    artwork_subject: str
    author: str
    artist_wikidata: str
    memorial: MemorialKind
    support: Support
    place: PlaceType
    surface: Surface
    power_supply: bool
    indoor: IndoorType
    breakfast: bool
    covered: bool
    flood_date: str
    horse: bool
    artist: str
    en_note: str
    water_slide: WaterSlideType
    landuse: LandType
    shower: ShowerType
    litecoin_payment: bool
    high_water_height: int
    drinking_water: bool
    noexit: bool
    old_ref: str
    alt_name_cs: str
Tower:
  inherits: ManMade
  fields:
    tower_type: TowerType
    building_part: BuildingPartType
    building: BuildingType
    tourism: TourismType
    fee: bool
    mobile_phone_communication: bool
    tower_construction: str
    colour: str
    roof_shape: RoofShape
    levels: int
    alt_name: str
    min_height: int
    roof_colour: str
    phone: str
    ele: int
    opening_hours: str
    flats: int
    microwave_communication: bool
    television_communication: bool
    communication: str
Track:
  inherits: Road
  long_display_template: '{{ class_name_display }}{% if name is defined %} {{ name }}{% endif %}'
  short_display_template: '{{ class_name_display }}{% if name is defined %} {{ name }}{% endif %}'
  fields:
    motorcar_allowed: AccessType
    leisure: LeisureType
    mtb_scale_uphill: int
    forestry: bool
    bicycle_class: int
    ticks_description: str
    motor_vehicle_note: str
    proposed_segregated: bool
    steep_incline: bool
    trasa: int
    sprint_lanes: int
    todo: str
    kct_barva: RouteImportance
    designation: str
TrafficCalming:
  inherits: OSMEntity
  fields:
    type: '!TrafficCalmingType'
    note: str
    surface: Surface
    maxspeed: int
    level: int
    fixme: str
    bicycle: AccessType
TrafficSign:
  inherits: Named
  fields:
    type: '!TrafficSignType'
    alt_name: str
    maxspeed: int
    backward: bool
Transformer:
  inherits: Power
  fields:
    power: PowerType
    transformer_type: TransformerType
    phases: int
    rating: str
    substation: PowerSubstationType
    height: meters
    start_date: str
    source: str
    ref: str
Tree:
  inherits: Natural
  fields:
    source: str
    natural: NaturalType
    taxon: str
    genus: str
    species: str
    taxon_cs: str
    genus_cs: str
    denotation: str
    circumference: float
    species_cs: str
    start_date: str
    diameter_crown: int
    genus_en: str
    comment: str
WaterArea:
  inherits: Named
  fields:
    natural: NaturalType
    type: WaterAreaType
    reservoir_type: str
    alt_name: str
    wikidata: str
    wikipedia: str
    landuse: LandType
    loc_name: str
    note: str
    landcover: LandCover
    website: str
    sport: SportType
WaterWay:
  inherits: Named
  fields:
    name_de: str
    dibavod_id: int
    source: str
    name_source: str
    waterway_source: str
    type: '!WaterWayType'
    alt_name: str
    tunnel: TunnelType
    layer: int
    boats_allowed: bool
    motor_boats_allowed: bool
    service: str
    width: int
    fixme: str
    intermittent: bool
    destination: str
    wikidata: str
    note: str
    old_name: str
    highway: RoadType
    surface: Surface
    bridge: bool
    mtb_scale: int
    life_cycle: LifeCycle
    start_date: str
    area: bool
    wikipedia: str
    whitewater_section_grade: str
    have_riverbank: bool
    whitewater_section_name: str
    whitewater_rapid_name: str
    whitewater_rapid_grade: str
    cemt: Cemt
    seamark_notice_function: NoticeFunction
    seamark_type: NoticeType
    cutting: bool
    sport: SportType
    seamark_notice_impact: NoticeImpact
    seamark_notice_category: NoticeCategory
    maxspeed: int
    seasonal: bool
    sac_scale: str
